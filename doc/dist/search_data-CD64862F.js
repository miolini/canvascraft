searchData={"items":[{"type":"module","doc":"CanvasCraft - 2D graphics drawing library facade.\n\nThis module delegates drawing operations to the Skia backend by default.\nThe canvas handle is represented as `{backend_module, backend_ref}`.\n\nExamples:\n- In-memory WEBP export (no temp files):\n    iex> {:ok, handle} = CanvasCraft.create_canvas(16, 16)\n    iex> {:ok, bin} = CanvasCraft.export_webp(handle)\n    iex> is_binary(bin)\n    true\n\nSee `guides/examples/` for runnable scripts demonstrating gradients, filters, images, and in-memory export.","title":"CanvasCraft","ref":"CanvasCraft.html"},{"type":"type","doc":"Backend-qualified canvas handle","title":"CanvasCraft.canvas_handle/0","ref":"CanvasCraft.html#t:canvas_handle/0"},{"type":"function","doc":"Return capabilities supported by the selected backend","title":"CanvasCraft.capabilities/1","ref":"CanvasCraft.html#capabilities/1"},{"type":"function","doc":"Clear the canvas to a given RGBA color (tuple {r,g,b,a}, 0..255).\nNo-op for backends that don't support it yet.","title":"CanvasCraft.clear/2","ref":"CanvasCraft.html#clear/2"},{"type":"function","doc":"Create a new canvas using the selected backend.\n\nOptions:\n- :backend - backend module (default: CanvasCraft.Backends.Skia)\n- other backend-specific options","title":"CanvasCraft.create_canvas/3","ref":"CanvasCraft.html#create_canvas/3"},{"type":"function","doc":"Draw UTF-8 text at x,y with RGBA color.","title":"CanvasCraft.draw_text/5","ref":"CanvasCraft.html#draw_text/5"},{"type":"function","doc":"Export the canvas using backend. Defaults to PNG; if opts[:format] == :webp\nand the backend implements export_webp/2, that path is used.","title":"CanvasCraft.export_png/2","ref":"CanvasCraft.html#export_png/2"},{"type":"function","doc":"Export PNG and write to file path (helper).","title":"CanvasCraft.export_png_to_file/3","ref":"CanvasCraft.html#export_png_to_file/3"},{"type":"function","doc":"Export the raw RGBA buffer from the backend, if supported.","title":"CanvasCraft.export_raw/1","ref":"CanvasCraft.html#export_raw/1"},{"type":"function","doc":"Export the canvas as WEBP binary using backend, no filesystem involved.","title":"CanvasCraft.export_webp/2","ref":"CanvasCraft.html#export_webp/2"},{"type":"function","doc":"Export WEBP and write to file path (helper).","title":"CanvasCraft.export_webp_to_file/3","ref":"CanvasCraft.html#export_webp_to_file/3"},{"type":"function","doc":"Fill a circle with a color.","title":"CanvasCraft.fill_circle/5","ref":"CanvasCraft.html#fill_circle/5"},{"type":"function","doc":"Fill an axis-aligned rectangle.\nNo-op for backends that don't support it yet; implemented later.","title":"CanvasCraft.fill_rect/5","ref":"CanvasCraft.html#fill_rect/5"},{"type":"function","doc":"Fill an axis-aligned rectangle with a color.","title":"CanvasCraft.fill_rect/6","ref":"CanvasCraft.html#fill_rect/6"},{"type":"function","doc":"Return a simple atom for smoke tests.","title":"CanvasCraft.hello/0","ref":"CanvasCraft.html#hello/0"},{"type":"function","doc":"Load a TTF/OTF font from a filesystem path for the current backend (when supported).","title":"CanvasCraft.load_font/2","ref":"CanvasCraft.html#load_font/2"},{"type":"function","doc":"Enable/disable antialiasing or set sample count (1,4,8).","title":"CanvasCraft.set_antialias/2","ref":"CanvasCraft.html#set_antialias/2"},{"type":"function","doc":"Set current font size in points/pixels (backend-defined units).","title":"CanvasCraft.set_font_size/2","ref":"CanvasCraft.html#set_font_size/2"},{"type":"function","doc":"Return true if backend supports the given feature","title":"CanvasCraft.supports?/2","ref":"CanvasCraft.html#supports?/2"},{"type":"function","doc":"Write a binary returned from export_* to a file path (thin helper).","title":"CanvasCraft.write_binary/2","ref":"CanvasCraft.html#write_binary/2"},{"type":"module","doc":"Skia backend module.\n\nSelect by passing `backend: Elixir.CanvasCraft.Backends.Skia` to `CanvasCraft.create_canvas/3`.\nDelegates to NIFs declared in `CanvasCraft.Native.Skia` when available.","title":"CanvasCraft.Backends.Skia","ref":"CanvasCraft.Backends.Skia.html"},{"type":"function","doc":"","title":"CanvasCraft.Backends.Skia.draw_text/5","ref":"CanvasCraft.Backends.Skia.html#draw_text/5"},{"type":"function","doc":"","title":"CanvasCraft.Backends.Skia.fill_circle/5","ref":"CanvasCraft.Backends.Skia.html#fill_circle/5"},{"type":"function","doc":"","title":"CanvasCraft.Backends.Skia.fill_rect/6","ref":"CanvasCraft.Backends.Skia.html#fill_rect/6"},{"type":"function","doc":"","title":"CanvasCraft.Backends.Skia.load_font/2","ref":"CanvasCraft.Backends.Skia.html#load_font/2"},{"type":"function","doc":"","title":"CanvasCraft.Backends.Skia.set_antialias/2","ref":"CanvasCraft.Backends.Skia.html#set_antialias/2"},{"type":"function","doc":"","title":"CanvasCraft.Backends.Skia.set_font_size/2","ref":"CanvasCraft.Backends.Skia.html#set_font_size/2"},{"type":"module","doc":"Capability and enums/typespecs for CanvasCraft primitive families and options.","title":"CanvasCraft.Capabilities","ref":"CanvasCraft.Capabilities.html"},{"type":"type","doc":"Blend modes","title":"CanvasCraft.Capabilities.blend_mode/0","ref":"CanvasCraft.Capabilities.html#t:blend_mode/0"},{"type":"type","doc":"Clip operation mode","title":"CanvasCraft.Capabilities.clip_mode/0","ref":"CanvasCraft.Capabilities.html#t:clip_mode/0"},{"type":"type","doc":"Feature atoms for capability discovery","title":"CanvasCraft.Capabilities.feature/0","ref":"CanvasCraft.Capabilities.html#t:feature/0"},{"type":"type","doc":"Gradient stop: {offset 0..1, {r,g,b,a}}","title":"CanvasCraft.Capabilities.gradient_stop/0","ref":"CanvasCraft.Capabilities.html#t:gradient_stop/0"},{"type":"type","doc":"Line cap style","title":"CanvasCraft.Capabilities.line_cap/0","ref":"CanvasCraft.Capabilities.html#t:line_cap/0"},{"type":"type","doc":"Line join style","title":"CanvasCraft.Capabilities.line_join/0","ref":"CanvasCraft.Capabilities.html#t:line_join/0"},{"type":"function","doc":"All known features","title":"CanvasCraft.Capabilities.features/0","ref":"CanvasCraft.Capabilities.html#features/0"},{"type":"function","doc":"Return true if backend supports feature (based on capabilities/0)","title":"CanvasCraft.Capabilities.supports?/2","ref":"CanvasCraft.Capabilities.html#supports?/2"},{"type":"module","doc":"Font loader utility for CanvasCraft.\nLoads fonts from priv/fonts, with fallback to DejaVuSans.ttf.","title":"CanvasCraft.Font","ref":"CanvasCraft.Font.html"},{"type":"function","doc":"Return default font binary.","title":"CanvasCraft.Font.default/0","ref":"CanvasCraft.Font.html#default/0"},{"type":"function","doc":"Load a font by name from priv/fonts, fallback to default if missing.","title":"CanvasCraft.Font.load/1","ref":"CanvasCraft.Font.html#load/1"},{"type":"function","doc":"Return absolute path to the test/default font, raising if missing.","title":"CanvasCraft.Font.test_font!/0","ref":"CanvasCraft.Font.html#test_font!/0"},{"type":"behaviour","doc":"Behaviour defining the backend-agnostic rendering contract for CanvasCraft.","title":"CanvasCraft.Renderer","ref":"CanvasCraft.Renderer.html"},{"type":"behaviour","doc":"iex> defmodule MyBackend do\n    ...>   @behaviour CanvasCraft.Renderer\n    ...>   def new_surface(w, h, _opts), do: {:ok, {w, h}}\n    ...>   def export_webp({_w, _h}, _opts), do: {:ok, <<1,2,3>>}\n    ...>   def capabilities, do: MapSet.new([:images])\n    ...> end\n    iex> {:ok, surf} = MyBackend.new_surface(10, 10, [])\n    iex> {:ok, bin} = MyBackend.export_webp(surf, [])\n    iex> is_binary(bin)\n    true\n\nBackends implement these callbacks; the facade delegates to them.\n\nThis minimal contract supports:\n- Creating a surface of given width/height\n- Exporting to PNG/WEBP encodings\n- Exporting the raw RGBA buffer (stride-aligned)\n\nExpanded primitive families and capability discovery:\n- Images (load/draw, sampling)\n- Gradients & shaders\n- Color/image filters\n- Blending (blend modes) and save layers\n- Clipping (rect/path)\n- Shapes (round rect, oval/circle, arc)\n- Path effects (e.g., dash)","title":"Example - CanvasCraft.Renderer","ref":"CanvasCraft.Renderer.html#module-example"},{"type":"type","doc":"Feature atoms for capability discovery","title":"CanvasCraft.Renderer.feature/0","ref":"CanvasCraft.Renderer.html#t:feature/0"},{"type":"type","doc":"Canvas height in pixels","title":"CanvasCraft.Renderer.height/0","ref":"CanvasCraft.Renderer.html#t:height/0"},{"type":"type","doc":"Raw export tuple: {width, height, stride, rgba_binary}","title":"CanvasCraft.Renderer.raw_export/0","ref":"CanvasCraft.Renderer.html#t:raw_export/0"},{"type":"type","doc":"Bytes per row in the raw RGBA buffer (>= width*4)","title":"CanvasCraft.Renderer.stride/0","ref":"CanvasCraft.Renderer.html#t:stride/0"},{"type":"type","doc":"Opaque backend surface handle","title":"CanvasCraft.Renderer.surface/0","ref":"CanvasCraft.Renderer.html#t:surface/0"},{"type":"type","doc":"Canvas width in pixels","title":"CanvasCraft.Renderer.width/0","ref":"CanvasCraft.Renderer.html#t:width/0"},{"type":"callback","doc":"Capability discovery: return a set of supported features.","title":"CanvasCraft.Renderer.capabilities/0","ref":"CanvasCraft.Renderer.html#c:capabilities/0"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.clip_rect/6","ref":"CanvasCraft.Renderer.html#c:clip_rect/6"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.draw_arc/6","ref":"CanvasCraft.Renderer.html#c:draw_arc/6"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.draw_image/5","ref":"CanvasCraft.Renderer.html#c:draw_image/5"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.draw_oval/5","ref":"CanvasCraft.Renderer.html#c:draw_oval/5"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.draw_round_rect/7","ref":"CanvasCraft.Renderer.html#c:draw_round_rect/7"},{"type":"callback","doc":"Export the current surface as a PNG (or PNG-like) binary.","title":"CanvasCraft.Renderer.export_png/2","ref":"CanvasCraft.Renderer.html#c:export_png/2"},{"type":"callback","doc":"Export the raw RGBA buffer from the surface.\n\nReturns {width, height, stride, rgba_binary} where rgba_binary is\n8-bit per channel, premultiplied or straight depending on backend.","title":"CanvasCraft.Renderer.export_raw/1","ref":"CanvasCraft.Renderer.html#c:export_raw/1"},{"type":"callback","doc":"Export the current surface as a WEBP (or WEBP-like) binary.","title":"CanvasCraft.Renderer.export_webp/2","ref":"CanvasCraft.Renderer.html#c:export_webp/2"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.load_image_from_binary/2","ref":"CanvasCraft.Renderer.html#c:load_image_from_binary/2"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.load_image_from_path/2","ref":"CanvasCraft.Renderer.html#c:load_image_from_path/2"},{"type":"callback","doc":"Create a new drawing surface.\n\nExpected to allocate any necessary backend resources to draw into a\nwidth×height canvas. Options are backend-specific.","title":"CanvasCraft.Renderer.new_surface/3","ref":"CanvasCraft.Renderer.html#c:new_surface/3"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.save_layer/2","ref":"CanvasCraft.Renderer.html#c:save_layer/2"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.set_blend_mode/2","ref":"CanvasCraft.Renderer.html#c:set_blend_mode/2"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.set_color_filter/2","ref":"CanvasCraft.Renderer.html#c:set_color_filter/2"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.set_image_filter/2","ref":"CanvasCraft.Renderer.html#c:set_image_filter/2"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.set_linear_gradient/6","ref":"CanvasCraft.Renderer.html#c:set_linear_gradient/6"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.set_path_effect/2","ref":"CanvasCraft.Renderer.html#c:set_path_effect/2"},{"type":"callback","doc":"","title":"CanvasCraft.Renderer.set_radial_gradient/5","ref":"CanvasCraft.Renderer.html#c:set_radial_gradient/5"},{"type":"module","doc":"Declarative DSL for building CanvasCraft scenes.\n\nExample:\n    import CanvasCraft.Scene\n    render width: 1920, height: 1080, path: \"out.webp\" do\n      rect 60, 60, 1800, 960, {42,46,54,255}\n      circle 300, 260, 110, {35,132,252,255}\n    end\n\nAll commands are expanded to `CanvasCraft` API calls against an internal `handle`.","title":"CanvasCraft.Scene","ref":"CanvasCraft.Scene.html"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.aa/1","ref":"CanvasCraft.Scene.html#aa/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.candle_chart/1","ref":"CanvasCraft.Scene.html#candle_chart/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.candle_chart/5","ref":"CanvasCraft.Scene.html#candle_chart/5"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.candle_chart/7","ref":"CanvasCraft.Scene.html#candle_chart/7"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.chip/1","ref":"CanvasCraft.Scene.html#chip/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.circle/1","ref":"CanvasCraft.Scene.html#circle/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.circle/4","ref":"CanvasCraft.Scene.html#circle/4"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.circle/5","ref":"CanvasCraft.Scene.html#circle/5"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.clear/1","ref":"CanvasCraft.Scene.html#clear/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.donut_segment/1","ref":"CanvasCraft.Scene.html#donut_segment/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.donut_segment/7","ref":"CanvasCraft.Scene.html#donut_segment/7"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.donut_segment/8","ref":"CanvasCraft.Scene.html#donut_segment/8"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.grid/1","ref":"CanvasCraft.Scene.html#grid/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.grid/6","ref":"CanvasCraft.Scene.html#grid/6"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.grid/7","ref":"CanvasCraft.Scene.html#grid/7"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.label/1","ref":"CanvasCraft.Scene.html#label/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.line_chart/1","ref":"CanvasCraft.Scene.html#line_chart/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.line_chart/5","ref":"CanvasCraft.Scene.html#line_chart/5"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.line_chart/6","ref":"CanvasCraft.Scene.html#line_chart/6"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.linear_gradient_rect/1","ref":"CanvasCraft.Scene.html#linear_gradient_rect/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.panel/1","ref":"CanvasCraft.Scene.html#panel/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.panel/5","ref":"CanvasCraft.Scene.html#panel/5"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.panel/6","ref":"CanvasCraft.Scene.html#panel/6"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.paragraph/1","ref":"CanvasCraft.Scene.html#paragraph/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.progress_bar/1","ref":"CanvasCraft.Scene.html#progress_bar/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.progress_bar/5","ref":"CanvasCraft.Scene.html#progress_bar/5"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.progress_bar/6","ref":"CanvasCraft.Scene.html#progress_bar/6"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.radial_gradient_circle/1","ref":"CanvasCraft.Scene.html#radial_gradient_circle/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.rect/1","ref":"CanvasCraft.Scene.html#rect/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.rect/5","ref":"CanvasCraft.Scene.html#rect/5"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.rect/6","ref":"CanvasCraft.Scene.html#rect/6"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.render/2","ref":"CanvasCraft.Scene.html#render/2"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.scatter/1","ref":"CanvasCraft.Scene.html#scatter/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.scatter/6","ref":"CanvasCraft.Scene.html#scatter/6"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.set_font/1","ref":"CanvasCraft.Scene.html#set_font/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.text/1","ref":"CanvasCraft.Scene.html#text/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.text_bar/1","ref":"CanvasCraft.Scene.html#text_bar/1"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.text_bar/4","ref":"CanvasCraft.Scene.html#text_bar/4"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.text_bar/5","ref":"CanvasCraft.Scene.html#text_bar/5"},{"type":"macro","doc":"","title":"CanvasCraft.Scene.text_real/1","ref":"CanvasCraft.Scene.html#text_real/1"},{"type":"extras","doc":"# CanvasCraft\n\n![Elixir](https://img.shields.io/badge/Elixir-4B275F?style=flat&logo=elixir&logoColor=white) [![Hex](https://img.shields.io/hexpm/v/canvas_craft)](https://hex.pm/packages/canvas_craft)\n\nIn-memory 2D rendering with a Skia backend (Rustler NIF). 100% declarative Scene DSL for charts and UI-like scenes.","title":"CanvasCraft","ref":"readme.html"},{"type":"extras","doc":"Add to `mix.exs`:\n\n```elixir\n{:canvas_craft, \"~> 0.2.0\"}\n```\n\nThis builds a small native library (Rust). You need a Rust toolchain (`rustup` recommended).","title":"Install - CanvasCraft","ref":"readme.html#install"},{"type":"extras","doc":"- Elixir >= 1.16, OTP >= 26\n- Rust toolchain (required to compile the NIF)\n- macOS or Linux (x86_64/arm64). Windows WSL works (experimental)","title":"Requirements - CanvasCraft","ref":"readme.html#requirements"},{"type":"extras","doc":"- Real in-memory WEBP export (no temp files)\n- Raw RGBA buffer access\n- Declarative DSL with named properties and per-element antialiasing\n- Primitives: clear, rect, circle; composites: panel, donut_segment, grid, scatter, progress_bar, line_chart, candle_chart","title":"Features - CanvasCraft","ref":"readme.html#features"},{"type":"extras","doc":"![KitchenSink](kitchensink.webp)","title":"Preview - CanvasCraft","ref":"readme.html#preview"},{"type":"extras","doc":"Minimal scene:\n\n```elixir\nimport CanvasCraft.Scene\n\nrender width: 128, height: 128, path: \"out.webp\" do\n  rect x: 16, y: 16, w: 96, h: 96, color: {0, 128, 255, 255}\nend\n```\n\nSkia backend is default. To get a binary instead of a file:\n\n```elixir\nimport CanvasCraft.Scene\n{:ok, webp} = render width: 320, height: 240 do\n  circle cx: 120, cy: 120, r: 80, color: {30, 180, 90, 255}\nend\nFile.write!(\"circle.webp\", webp)\n```","title":"Quickstart (Declarative DSL) - CanvasCraft","ref":"readme.html#quickstart-declarative-dsl"},{"type":"extras","doc":"- Colors: RGBA tuples `{r,g,b,a}` with 0..255 components\n- Antialiasing: `aa 1 | 4 | 8` (can be set globally or per element, or scene-level via `render aa: 8`)\n- Coordinate system: pixels, origin at top-left\n- Named properties on all elements: `rect x:, y:, w:, h:, color:` etc.","title":"DSL essentials - CanvasCraft","ref":"readme.html#dsl-essentials"},{"type":"extras","doc":"- `examples/kitchensink` – 1080p dashboard using the DSL (header + overview + system + analytics subplots)\n\nRender KitchenSink (repo root):\n\n```sh\nmix run -e 'Code.compile_file(\"examples/kitchensink/lib/kitchensink.ex\"); KitchenSink.render(\"kitchensink.webp\", aa: 8)'\nfile kitchensink.webp\n```\n\nOr from the example folder:\n\n```sh\ncd examples/kitchensink\nmix run -e 'Code.compile_file(\"lib/kitchensink.ex\"); KitchenSink.render(\"output.webp\", aa: 8)'\nfile output.webp\n```","title":"Examples - CanvasCraft","ref":"readme.html#examples"},{"type":"extras","doc":"- Backend: Skia-like raster implemented as a Rust NIF (via Rustler)\n- Public API: `CanvasCraft` module (in-memory export, raw buffer)\n- DSL: `CanvasCraft.Scene` macro composes scenes and scopes AA\n- Encoding: WEBP (lossless); raw RGBA buffer for custom pipelines","title":"Tech details - CanvasCraft","ref":"readme.html#tech-details"},{"type":"extras","doc":"- Compiles the NIF at dependency build time\n- Needs: Rust (`rustup toolchain install stable`), clang/LLVM on Linux","title":"Platforms & build - CanvasCraft","ref":"readme.html#platforms-build"},{"type":"extras","doc":"- `{:error, :backend_missing}`: run from repo root using `mix` so Rustler loads the NIF. If needed: `mix clean && mix compile`.\n- NIF fails to load: ensure Rust toolchain is installed and on PATH.\n- Compile errors about clang: install build tools (`xcode-select --install` on macOS; `build-essential` on Ubuntu)","title":"Troubleshooting - CanvasCraft","ref":"readme.html#troubleshooting"},{"type":"extras","doc":"See `CONTRIBUTING.md`. CI runs format, Credo, Dialyzer, tests, and non-blocking benches.","title":"Contributing - CanvasCraft","ref":"readme.html#contributing"},{"type":"extras","doc":"MIT","title":"License - CanvasCraft","ref":"readme.html#license"},{"type":"extras","doc":"# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on Keep a Changelog and this project adheres to Semantic Versioning.\n\n## [0.2.0] - 2025-09-28","title":"Changelog","ref":"changelog.html"},{"type":"extras","doc":"- Scene-level options in `render/2` (aa/background/font) and per-element `aa:` support across helpers.\n- New UI helpers: `linear_gradient_rect`, `radial_gradient_circle`, `chip`, `paragraph`, and real `text` with font loading.\n- Kitchensink example refactor: palette, balanced header, system meters with percentages, and split analytics into non-overlapping subplots (trend, scatter, OHLC).","title":"Added - Changelog","ref":"changelog.html#added"},{"type":"extras","doc":"- Anti-aliasing now works for circles (Rust NIF `fill_circle` uses MSAA samples); visuals are smoother.\n- Consistent AA pass-through in named-property helpers (grid/line_chart/candle_chart/etc.).","title":"Fixed - Changelog","ref":"changelog.html#fixed"},{"type":"extras","doc":"- README updated with accurate run commands and Hex badge.\n\n## [0.1.0] - 2025-09-28","title":"Changed - Changelog","ref":"changelog.html#changed"},{"type":"extras","doc":"- Minimal, fully working Skia backend via Rustler NIF producing real WEBP binaries (in-memory, zero-FS path).\n- Public API facade (`CanvasCraft`) with `create_canvas/2-3`, `export_webp/1-2`, and `export_raw/1`.\n- Declarative DSL (`CanvasCraft.Scene`) with positional and named properties, including per-element antialiasing.\n- Shapes and primitives: clear, rect, circle, panel, donut segment, grid, scatter, progress bar.\n- Chart helpers: line chart and candle chart; text helpers: `text_bar`.\n- Capability discovery (`CanvasCraft.Capabilities`).\n- Reference backend for fast tests and benchmarks.\n- Examples: `earth_planet` and `kitchensink` (1080p dashboard) using the declarative DSL.\n- Benchmarks for draw ops, images/filters, and in-memory encoding.","title":"Added - Changelog","ref":"changelog.html#added-1"},{"type":"extras","doc":"- CI runs formatting, Credo, Dialyzer, tests, and non-blocking benchmarks.","title":"Changed - Changelog","ref":"changelog.html#changed-1"},{"type":"extras","doc":"- Requires Rust toolchain for building the NIF.","title":"Notes - Changelog","ref":"changelog.html#notes"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.38.4"}}